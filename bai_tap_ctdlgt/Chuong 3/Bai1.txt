Algorithm Ex1 (A)
    Input: An array A storing n >= 1 integers.
    Output: The sum of the elements in A.
    
    s <- A[0]                   2
    for i <- 1 to n-1 do        (n-1) + 1 + 1 = n + 1
        s <- s + A[i]           (n-1) * 3 = 3*n - 3
    return s                    1
    
    T(n) = 2 + (n+1) + (3*n - 3) + 1 = 4*n + 1
    => Độ phức tạp thuật toán: O(n)

    --------------------------------------------------------

Algorithm Ex2 (A)
    Input: An array A storing n >= 1 integers.
    Output: The sum of the elements at even cells in A.
    
    s <- A[0]                                       2
    for i <- 2 to n-1 by increments of 2 do         (n-1)/2 + 1 + 1 = (n-1)/2 + 2 = n/2 + 3/2
        s <- s + A[i]                               (n-1)/2 * 3 = 3*n/2 - 3/2
    return s                                        1
    
    T(n) = 2 + ((n/2) + 3/2) + (3*n/2 - 3/2) + 1 = 2*n + 3
    => Độ phức tạp thuật toán: O(n)
    
    --------------------------------------------------------
    
Algorithm Ex3 (A)
    Input: An array A storing n >= 1 integers.
    Output: The sum of the prefix sums in A.
    
    s <- 0                      1
    for i <- 0 to n-1 do        n + 1 + 1 = n + 2
        s <- s + A[0]           n*3
        for j <- 1 to i do      (1 + 2 + 3 + ... + n) + 2*n = n*(n-1)/2 + 2*n
            s <- s + A[j]       (1 + 2 + 3 + ... + n)*3 = 3*n*(n-1)/2
    return s                    1
    
    T(n) = 1 + (n+2) + (3*n) + (n*(n-1)/2 + n*2) + (3*n*(n-1)/2) + 1 = 2*n*(n-1) + 6*n + 4 = 2*n^2 + 4*n + 4
    => Độ phức tạp thuật toán: O(n^2)

    --------------------------------------------------------
  
Algorithm Ex4 (A)
    Input: An array A storing n >= 1 integers.
    Output: The sum of the prefix sums in A.
    
    s <- A[0]                   2
    t <- s                      1
    for i <- 1 to n-1 do        (n-1) + 1 + 1 = n + 1
        s <- s + A[i]           (n-1) * 3 = 3*n - 3
        t <- t + s              (n-1) * 2 = 2*n - 2
    return s                    1
    
    T(n) = 2 + 1 + (n+1) + (3*n - 3) + (2*n - 2) + 1 = 6*n
    => Độ phức tạp thuật toán: O(n)
    
    --------------------------------------------------------
 
Algorithm Ex5 (A, B)
    Input: An array A and B each storing n >= 1 integers.
    Output: The sum of the elements in B equal to the sum of prefix sums in A.
    
    c <- 0                          1
    for i <- 1 to n-1 do            (n-1) + 1 + 1 = n + 1
        s <- 0                      n-1
        for j <= 0 to n-1 do        n + 1 + 1 = n + 2
            s <= s + A[0]           3*n*(n-1)
            for k <- 1 to j do      (1 + 2 + 3 + ... + n-2)*(n-1) + 2*n*(n-1) = (n-1)*(n-2)*(n-1)/2 + 2*n*(n-1)
                s <- s + A[k]       (1 + 2 + 3 + ... + n-2)*3*(n-1) = 3*(n-1)*(n-1)*(n-2)
        if B[i] = s then            n-1
            c <- c + 1              2*(n-1)
    return s                        1
    
    T(n) = 1 + (n+1) + (n-1) + (n+2) + 3*n*(n-1) + ((n-1)*(n-2)*(n-1)/2 + 2*n*(n-1)) + (3*(n-1)*(n-1)*(n-2)) +
    + (n-1) + 2*(n-1) + 1 = 7*(n^3 - 4*n^2 +5^n -2)/2 + 5*n^2 + n + 1 = 7/2*n^3 - 9*n^2 + 37/2*n - 6  
    => Độ phức tạp thuật toán: O(n^3)